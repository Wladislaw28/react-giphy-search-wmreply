{"version":3,"sources":["components/giphy-list/GiphyList.tsx","constants.tsx","components/title/Title.tsx","components/header/Header.tsx","App.tsx"],"names":["GiphyList","getDataId","id","alert","dataISave","_this","props","imagesData","filter","image","getLocalStorage","getDataRemove","dataR","JSON","parse","localStorage","getItem","setItem","stringify","window","location","reload","parseGiphy","push","gifsave","Array","_this2","this","_this$props","isSimilar","react__WEBPACK_IMPORTED_MODULE_5__","className","map","react_lazyload__WEBPACK_IMPORTED_MODULE_8___default","a","throttle","height","key","src","images","original","url","alt","title","length","concat","substring","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","pathname","state","giphTitle","giphUrl","giphSource","source","giphUrlInGiphyCom","is_sticker","onClick","React","__webpack_require__","d","__webpack_exports__","API_KEY","Title","_ref","react_default","createElement","data-letters","Header","react","react_router_dom","exact","App","valueText","getGiphy","_callee","type","valueTextUrl","api_call","data","regenerator_default","wrap","_context","prev","next","fetch","sent","json","setState","stop","componentWillMount","giphys","componentDidUpdate","handleInputChange","_ref2","value","target","_this$state","header_Header","components_title_Title","onChange","htmlFor"],"mappings":"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","file":"static/js/giphy.dbaa8c26.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport './GiphyList.css';\nimport Lazyload from 'react-lazyload';\nimport {GiphyListProps} from '../../interface';\n\nclass GiphyList extends React.PureComponent<GiphyListProps, {}>{\n\n\tgetDataId = (id: string) => {\n\t    alert(\"You saved this image\");\n\t\tconst dataI = this.props.imagesData.filter((image) => image.id === id );\n        const dataISave = dataI[\"0\"];\n        this.getLocalStorage(dataISave);\n\t};\n\n     getDataRemove = (id: string) => {\n        const saveImages = JSON.parse(localStorage.getItem(\"gifsave\") || \"[]\");\n        const dataR = saveImages.filter((image) => image.id !== id );\n        localStorage.setItem(\"gifsave\", JSON.stringify(dataR));\n         window.location.reload(true);\n    };\n\n    getLocalStorage = (dataISave : Object) => {\n        if (localStorage.getItem(\"gifsave\") !== null) {\n            // @ts-ignore\n            const parseGiphy = JSON.parse(localStorage.getItem(\"gifsave\"));\n            parseGiphy.push(dataISave);\n            localStorage.setItem(\"gifsave\", JSON.stringify(parseGiphy));\n        } else {\n            const gifsave = new Array();\n            gifsave.push(dataISave);\n            localStorage.setItem(\"gifsave\", JSON.stringify(gifsave));\n        }\n    };\n\n\trender(){\n\t\tconst {imagesData, isSimilar} = this.props;\n\t\treturn(\n\t\t\t\t<div className=\"grid\">\n\t\t\t\t\t{imagesData.map((image) => (\n\t\t\t\t\t\t<Lazyload throttle={200} height={300} key={image.id}>\n\t\t\t\t\t\t\t<div className=\"grid__item\" >\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<div className=\"grid__item-imgwrap\">\n\t\t\t\t\t\t\t\t\t\t<img className=\"grid__item-img grid__item-img--scaled\"\n                                             src={image.images.original.url} alt={image.title}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"grid__item-content\">\n\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"grid__item-title\">\n\t\t\t\t\t\t\t\t\t\t\t{image.title.length < 20 ? `${image.title}` :\n                                                `${image.title.substring(0,25)}...` }\n\t\t\t\t\t\t\t\t\t\t</h2>\n\n                                        {isSimilar === false ? <div>\n                                            <button className=\"giphy_buttons\">\n                                                <Link to={{\n                                                    pathname: `/giphyitem/${image.id}`,\n                                                    state: { giphTitle: image.title,\n                                                        giphUrl: image.images.original.url,\n                                                        giphSource: image.source,\n                                                        giphUrlInGiphyCom: image.url}\n                                                }}>View {image.is_sticker !== 1 ? 'Giphy' : 'Stick'}</Link>\n                                            </button>\n\n                                            <button onClick={() => this.getDataId(image.id)}\n                                                    className=\"giphy_buttons\">Save</button>\n                                        </div>\n                                            : <button onClick={() => this.getDataRemove(image.id)}\n                                                      className=\"giphy_buttons\">Delete</button>}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Lazyload>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default GiphyList;\n","export const API_KEY = \"QnJhWIXwS59aPWO6hXi0rUIDNqEZ4mwj\";\n\n","import React from 'react';\r\n\r\nimport './Title.css';\r\n\r\nexport interface TitleProps {\r\n    title: string;\r\n}\r\n\r\nconst Title = ({title}: TitleProps) => (\r\n\t<h1 className=\"link link--mallki\">{title}\r\n\t\t\t<span data-letters={title}></span>\r\n\t\t\t<span data-letters={title}></span></h1>\r\n);\r\n\r\nexport default Title;\r\n","import * as React from 'react';\r\nimport {Link, NavLink} from 'react-router-dom';\r\nimport './header.css';\r\n\r\nclass Header extends React.Component<{}, {}>{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"header\">\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"row no-gutters menu\">\r\n\t\t\t\t\t\t<div className=\"col-md-6 col-lg-3 logo_header\">\r\n\t\t\t\t\t\t\t<NavLink exact to=\"/\">WL28</NavLink>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-md-6 col-lg-9 d-none d-lg-block d-xl-block\">\r\n\t\t\t\t\t\t\t<nav className=\"d-flex flex-row-reverse\">\r\n\t\t\t\t\t\t\t\t<ul className=\"p-2 nav_header\">\r\n\t\t\t\t\t\t\t\t\t<li>\r\n                                        <button className=\"active-giphy__button\">\r\n                                            <Link to='/savegiphy'>Save</Link>\r\n                                        </button>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Header;\r\n","import * as React from 'react';\nimport GiphyList from './components/giphy-list/GiphyList';\nimport Title from './components/title/Title';\nimport Header from './components/header/Header';\nimport {API_KEY} from './constants';\nimport {ImagesData, AppState} from './interface';\n\nimport './App.css';\n\nclass App extends React.Component<{}, AppState>{\n\n\tstate = {\n\t\timagesData: [],\n\t\tvalueText: '',\n\t};\n\n\tgetGiphy = async (type: string, valueTextUrl: string) => {\n\t\tconst api_call = await fetch(`http://api.giphy.com/v1/${type}/search?q=${valueTextUrl}&api_key=${API_KEY}`);\n\t\tconst data = await api_call.json();\n\t\tthis.setState ({\n\t\t\timagesData: data.data\n\t\t});\n\t};\n\n    componentWillMount = () => {\n        if (localStorage.getItem(\"giphys\") === null) {\n            this.getGiphy('gifs', 'javascript');\n        } else {\n             this.getLocalStorage();\n        }\n    };\n\n    getLocalStorage = () => {\n        const json: string | null  = localStorage.getItem(\"giphys\");\n        // @ts-ignore\n        const giphys = JSON.parse(json);\n        this.setState({\n        \t\timagesData: giphys\n        })\n    };\n\n\tcomponentDidUpdate = () => {\n\t\tconst giphys = JSON.stringify(this.state.imagesData);\n\t\tlocalStorage.setItem(\"giphys\", giphys);\n\t};\n\n\thandleInputChange = ({ target: { value } }) => {\n\t\tthis.setState({\n\t\t\tvalueText: value,\n\t\t})\n\t};\n\n   \trender(){\n\t\tconst {imagesData, valueText} = this.state;\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Header />\n\t\t\t\t<Title title=\"Giphy Application\" />\n\n\t\t\t\t<span className=\"input input--hoshi\t\">\n\t\t\t\t\t<input className=\"input__field input__field--hoshi\" type=\"text\"\n                           onChange={this.handleInputChange} value={valueText}/>\n\t\t\t\t\t<label className=\"input__label input__label--hoshi input__label--hoshi-color-1\"\n                           htmlFor=\"input-4\">\n\t\t\t\t\t</label>\n\t\t\t\t</span>\n\n\t\t\t\t<button onClick={() => this.getGiphy(\"gifs\", valueText)} className=\"giphy_buttons\">GIPHY</button>\n\t\t\t\t<button onClick={() => this.getGiphy(\"stickers\", valueText)} className=\"giphy_buttons\">STICKERS</button>\n\n\t\t\t\t<h1 className=\"valueText_h1\">{valueText}</h1>\n\t\t\t\t<GiphyList isSimilar={false} imagesData={imagesData} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"],"sourceRoot":""}